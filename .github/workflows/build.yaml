name: build

on:
  push:
    branches:
      - main
    tags:
      - '*'
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: --deny warnings

jobs:
  build:
    name: Formatting and Linting
    runs-on: ubuntu-latest

    strategy:
      matrix:
        toolchain: [stable, beta, nightly]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.toolchain }}
          components: rustfmt, clippy
          override: true

      - name: Rustfmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: -- --check

      - name: Clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-targets

  check-version:
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    name: Check release version

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Calculate version from tag
        id: version
        run: echo "::set-output name=value::${GITHUB_REF#refs/tags/}"

      - name: Check tag against package version
        run: grep '^version = "${{ steps.version.outputs.value }}"$' Cargo.toml

  release:
    needs: check-version
    runs-on: macos-latest
    name: Release Workflow
    permissions:
      contents: write

    strategy:
      matrix:
        target: [x86_64-apple-darwin, aarch64-apple-darwin]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: extractions/setup-crate@v1
        with:
          owner: rossmacarthur
          name: powerpack
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: rustfmt, clippy
          target: ${{ matrix.target }}
          override: true

      - name: Calculate version from tag
        id: version
        run: echo "::set-output name=value::${GITHUB_REF#refs/tags/}"

      - name: Archive
        id: archive
        run: |
          archive=numbers-converter-${{ steps.version.outputs.value }}-${{ matrix.target }}.alfredworkflow
          powerpack package --target ${{ matrix.target }}
          mv target/workflow/alfred-numbers-converter.alfredworkflow "$archive"
          echo "::set-output name=path::$archive"

      - uses: softprops/action-gh-release@v1
        with:
          files: ${{ steps.archive.outputs.path }}
          token: ${{ secrets.GITHUB_TOKEN }}
